INFO(20230927 16:54:04) [main.py:72]:
##time: Wed Sep 27 16:54:04 2023
##cwd: /data/user/luomai/SANGO/SANGO/CACNN
##cmd: main.py -i ../../preprocessed_data/reference_query_example.h5ad -g mm9 -o ../output/reference_query_example
##args: Namespace(alpha=0.0, batch_size=128, data='../../preprocessed_data/reference_query_example.h5ad', device=0, g='mm9', lr=0.01, max_epoch=300, num_workers=32, outdir='../output/reference_query_example', seed=2020, seq_len=1344, use_reg_cell=False, w=False, z=64)
INFO(20230927 16:54:07) [main.py:109]:CACNN(
  (pre_conv): Sequential(
    (0): Conv1d(4, 288, kernel_size=(17,), stride=(1,), padding=(8,))
    (1): BatchNorm1d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): MaxPool1d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
    (3): ReLU()
  )
  (conv_towers): Sequential(
    (0): ConvTower(
      (conv1): Conv1d(288, 64, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
      (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): Conv1d(64, 64, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
      (bn2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (eca): eca_layer(
        (avg_pool): AdaptiveAvgPool1d(output_size=1)
        (conv): Conv1d(1, 1, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (sigmoid): Sigmoid()
      )
      (maxpool): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (downsample): Sequential(
        (0): Conv1d(288, 64, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): ConvTower(
      (conv1): Conv1d(64, 128, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
      (bn1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): Conv1d(128, 128, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
      (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (eca): eca_layer(
        (avg_pool): AdaptiveAvgPool1d(output_size=1)
        (conv): Conv1d(1, 1, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
        (sigmoid): Sigmoid()
      )
      (maxpool): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (downsample): Sequential(
        (0): Conv1d(64, 128, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): ConvTower(
      (conv1): Conv1d(128, 256, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
      (bn1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): Conv1d(256, 256, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
      (bn2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (eca): eca_layer(
        (avg_pool): AdaptiveAvgPool1d(output_size=1)
        (conv): Conv1d(1, 1, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
        (sigmoid): Sigmoid()
      )
      (maxpool): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (downsample): Sequential(
        (0): Conv1d(128, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (3): ConvTower(
      (conv1): Conv1d(256, 512, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
      (bn1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (conv2): Conv1d(512, 512, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
      (bn2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (eca): eca_layer(
        (avg_pool): AdaptiveAvgPool1d(output_size=1)
        (conv): Conv1d(1, 1, kernel_size=(5,), stride=(1,), padding=(2,), bias=False)
        (sigmoid): Sigmoid()
      )
      (maxpool): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (downsample): Sequential(
        (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (post_conv): Sequential(
    (0): Conv1d(512, 256, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (dense): Sequential(
    (0): Linear(in_features=7168, out_features=64, bias=True)
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.2, inplace=False)
  )
  (cell_embedding): Linear(in_features=64, out_features=10537, bias=True)
)
{'total_param': 4185523, 'trainable_param': 4185499}
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.95, 0.9995)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: False
    lr: 0.01
    maximize: False
    weight_decay: 0
)

INFO(20230927 16:55:34) [main.py:148]:Validation1 AUC=0.7731/0.0714
INFO(20230927 16:55:34) [main.py:155]:Epoch 1: best model saved

